<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	default-autowire="byName" default-lazy-init="true">

	<context:property-placeholder location="classpath:app.properties" />

   	<!-- 开启注解 ,需要如下两个类 -->
	<context:annotation-config />
	<!-- 扫描Controller -->
	<context:component-scan base-package="com.chanjetpay.garlic">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>



	<!-- 静态资源映射 -->
	<mvc:resources location="/assets/" mapping="/assets/**"/>
	<!--	<mvc:resources location="/.package/" mapping="/.package/**"/>-->

	<mvc:default-servlet-handler/>
	<mvc:annotation-driven />
	<aop:aspectj-autoproxy />

	<!-- use thymeleaf  -->
	<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/thymeleaf/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<!-- Template cache is set to false (default is true).        -->
		<property name="cacheable" value="false" />
		<property name="characterEncoding" value="UTF-8"/>
	</bean>


	<bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>

	<!--
	- The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
	- and uses the requested media type (determined by the path extension) to pick a matching view.
	- When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView,
	- otherwise to the BeanNameViewResolver.
	-->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="cnManager"/>

		<property name="viewResolvers">
			<list>
				<!-- Used here for 'xml' and 'atom' views  -->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
					<property name="order" value="1"/>
				</bean>

				<bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
					<property name="templateEngine" ref="templateEngine" />
					<property name="characterEncoding" value="UTF-8"/>
					<property name="order" value="2"/>
					<!-- We need to set exclusions because Content Negotiation tries to resolve from -->
					<!-- Thymeleaf even if a specific view bean (of a different class) is already    -->
					<!-- found, which might cause exceptions (e.g. ThymeleafView does not have a     -->
					<!-- 'marshaller' property).                                                     -->
					<property name="excludedViewNames" value="*.xml" />
				</bean>

				<!-- Default viewClass: JSTL view (JSP with html output)-->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/views/"/>
					<property name="suffix" value=".jsp"/>
					<property name="order" value="3"/>
				</bean>
			</list>
		</property>
	</bean>

	<!-- Simple strategy: only path extension is taken into account -->
	<bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!--<property name="favorPathExtension" value="true"/>
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="defaultContentType" value="text/html"/>-->

		<property name="useJaf" value="false"/>
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="true" />
		<property name="parameterName" value="mediaType" />
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="defaultContentType" value="text/html" />

		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="html" value="text/html" />
				<entry key="xml" value="application/xml" />
				<entry key="atom" value="application/atom+xml" />
			</map>
		</property>
	</bean>

	<!-- 异常处理 -->
	<!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error" />&lt;!&ndash; 错误页处理 &ndash;&gt;
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error</prop>
			</props>
		</property>
	</bean>-->
</beans>